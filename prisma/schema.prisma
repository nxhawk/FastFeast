generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  slug            String          @unique
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  products        CategoriesOnProducts[]
}

model Product {
    id              String          @id @default(auto()) @map("_id") @db.ObjectId
    name            String  
    slug            String          @unique
    description     String? 
    price           Int 
    status          Status          @default(DRAFT)
    image           Image?
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
    categories      CategoriesOnProducts[]  
    productOnOrder  ProductOnOrder[]
    deleted         Boolean         @default(false)
}

model CategoriesOnProducts {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  product       Product        @relation(fields: [productId], references: [id])
  productId     String         @db.ObjectId
  category      Category       @relation(fields: [categoryId], references: [id])
  categoryId    String         @db.ObjectId
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  @@unique([categoryId, productId])
}

model Image {
    id         String         @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    path       String
    createdAt  DateTime       @default(now())
    updatedAt  DateTime       @updatedAt
    product    Product?       @relation(fields: [productId], references: [id])
    productId  String?        @unique @db.ObjectId
}

model Order {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId
  fullName          String
  phoneNumber       String
  address           String
  totalPrice        Int
  status            OrderState     @default(NEW_ORDER)
  paymentMethod     PaymentMethod  @default(CASH)
  note              String?
  items             ProductOnOrder[]
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model ProductOnOrder {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  quantity          Int
  order             Order         @relation(fields: [orderId], references: [id])
  orderId           String        @db.ObjectId
  product           Product       @relation(fields: [productId], references: [id])
  productId         String        @db.ObjectId

  @@unique([orderId, productId])
}

enum OrderState {
  NEW_ORDER // đơn hàng mới
  CONFIRMED // đã xác nhận
  PROCESSING // đang chế biến
  DELIVERING // đang giao hàng
  COMPLETED // hoàn tất
  CANCELLED // đơn hủy
}

enum PaymentMethod {
  BANK
  CASH
}

enum Status {
  DRAFT
  PUBLIC
  OUTSTOCK
}